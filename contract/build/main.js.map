{"version":3,"file":"main.js","sources":["../src/helpers.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../src/index.js"],"sourcesContent":["export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    env.storageUsage(0);\n    return env.storage_usage(0);\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        let state = near.storageRead(\"STATE\");\n        if (state) {\n            Object.assign(this, JSON.parse(state));\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n}\n","import { assert } from \"./helpers\";\nimport { NearContract, NearBindgen, call, view, near } from \"near-sdk-js\";\n\nconst AUTHORIZED_ACCOUNT = \"coingecko-feed.idea404.testnet\";\nconst TEST_ACCOUNT = \"test.near\";\n\n@NearBindgen\nclass Contract extends NearContract {\n  constructor() {\n    super();\n    this.near_prices = {};\n  }\n\n  /**\n   * Adds price data to smart contract.\n   * @data: map of datetime string and price values floats, as:\n   *  {\n   *    \"01-01-1970 00:03:45\": 200.22,\n   *    \"01-02-1970 00:03:45\": 202.22,\n   *    ...\n   *  }\n   */\n  @call\n  addPrices(request_data) {\n    assert(\n      near.signerAccountId() === AUTHORIZED_ACCOUNT ||\n        near.signerAccountId() === TEST_ACCOUNT,\n      `Account ${near.signerAccountId()} unathourized to add data to smart contract.`\n    );\n    this.near_prices = { ...this.near_prices, ...request_data[\"data\"] };\n  }\n\n  /**\n   * Returns a map of float prices indexed by datetime.\n   * @from_datetime: string of datetime in ISO format, e.g. \"2021-07-27T16:02:08.070557\"\n   * @return:\n   *  {\n   *     \"2021-07-27T16:02:08.000000\": 122.22,\n   *     \"2021-07-28T16:02:08.000000\": 129.22,\n   *     ...\n   *  }\n   */\n  @view\n  getPrices() {\n    const result = { ...this.near_prices };\n    return result;\n  }\n}\n"],"names":["assert","condition","message","Error","call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","signerAccountId","env","signer_account_id","read_register","storageRead","storage_read","input","PromiseResult","storageWrite","value","exist","storage_write","NearContract","deserialize","state","near","assign","JSON","parse","stringify","serializeReturn","AUTHORIZED_ACCOUNT","TEST_ACCOUNT","Contract","constructor","near_prices","addPrices","request_data","getPrices","result"],"mappings":"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"}