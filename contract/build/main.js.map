{"version":3,"file":"main.js","sources":["../src/helpers.js","../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../src/index.js"],"sourcesContent":["export function assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n","export var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from '@scure/base';\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nfunction data_len(c) {\n    switch (c) {\n        case CurveType.ED25519:\n            return 32;\n        case CurveType.SECP256K1:\n            return 64;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction split_key_type_data(value) {\n    let idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [curveTypeFromStr(value.substring(0, idx)), value.substring(idx + 1)];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length) {\n        super(`Invalid length: ${length}`);\n        this.length = length;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\nexport class PublicKey {\n    constructor(data) {\n        this.data = data;\n        let curve_type = data.charCodeAt(0);\n        let curve_len = data_len(curve_type);\n        if (data.length != curve_len + 1) {\n            throw new InvalidLengthError(data.length);\n        }\n        this.data = data;\n    }\n    curveType() {\n        return this.data.charCodeAt(0);\n    }\n    static fromString(s) {\n        let [curve, key_data] = split_key_type_data(s);\n        let data;\n        try {\n            data = bytes(base58.decode(key_data));\n        }\n        catch (err) {\n            throw new Base58Error(err.message);\n        }\n        return new PublicKey(String.fromCharCode(curve) + data);\n    }\n}\n","import { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else {\n        throw Error(`Promise result ${status == PromiseResult.Failed ? \"Failed\" :\n            status == PromiseResult.NotReady ? \"NotReady\" : status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport function initialize({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function call({ privateFunction = false, payableFunction = false }) {\n    return function (target, key, descriptor) {\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            if (privateFunction && near.predecessorAccountId() !== near.currentAccountId()) {\n                throw Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > BigInt(0)) {\n                throw Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function view({}) {\n    return function (target, key, descriptor) {\n    };\n}\nexport function NearBindgen({ requireInit = false }) {\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(obj) {\n                near.storageWrite(\"STATE\", this._serialize(obj));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value) {\n                return JSON.stringify(value);\n            }\n            static _deserialize(value) {\n                return JSON.parse(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    if (classObject[item].constructor?.deserialize !== undefined) {\n                        classObject[item] = classObject[item].constructor.deserialize(plainObject[item]);\n                    }\n                    else {\n                        classObject[item] = plainObject[item];\n                    }\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import { assert } from \"./helpers\";\nimport { NearBindgen, call, view, near } from \"near-sdk-js\";\n\nconst AUTHORIZED_ACCOUNT = \"coingecko-feed.idea404.testnet\";\nconst TEST_ACCOUNT = \"test.near\";\n\n@NearBindgen({})\nclass Contract {\n  constructor() {\n    this.near_prices = {};\n  }\n\n  /**\n   * Adds price data to smart contract.\n   * @data: map of datetime string and price values floats, as:\n   *  {\n   *    \"01-01-1970 00:03:45\": 200.22,\n   *    \"01-02-1970 00:03:45\": 202.22,\n   *    ...\n   *  }\n   */\n  @call({})\n  addPrices({ request_data }) {\n    assert(\n      near.signerAccountId() === AUTHORIZED_ACCOUNT || near.signerAccountId() === TEST_ACCOUNT, \n      `Account ${near.signerAccountId()} unathourized to add data to smart contract.`\n    );\n    this.near_prices = { ...this.near_prices, ...request_data[\"data\"] };\n  }\n\n  /**\n   * Returns a map of float prices indexed by datetime.\n   * @from_datetime: string of datetime in ISO format, e.g. \"2021-07-27T16:02:08.070557\"\n   * @return:\n   *  {\n   *     \"2021-07-27T16:02:08.000000\": 122.22,\n   *     \"2021-07-28T16:02:08.000000\": 129.22,\n   *     ...\n   *  }\n   */\n  @view({})\n  getPrices() {\n    return this.prices;\n  }\n}\n"],"names":["assert","condition","message","Error","PromiseResult","PromiseError","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","b","c","encode","Array","from","reverse","reduce","acc","i","undefined","decode","alphabet","digits","isArray","length","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","Uint8Array","radix2","revPadding","unsafeWrapper","apply","e","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","str","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","charCodeAt","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","Object","keys","CurveType","U64_MAX","EVICTED_REGISTER","signerAccountId","env","signer_account_id","read_register","predecessorAccountId","predecessor_account_id","attachedDeposit","attached_deposit","storageRead","key","ret","storage_read","currentAccountId","current_account_id","storageWrite","value","exist","storage_write","call","privateFunction","payableFunction","target","descriptor","originalMethod","near","BigInt","view","NearBindgen","requireInit","_create","_getState","rawState","_deserialize","_saveToStorage","obj","_serialize","_getArgs","JSON","parse","stringify","_reconstruct","classObject","plainObject","item","constructor","deserialize","_requireInit","AUTHORIZED_ACCOUNT","TEST_ACCOUNT","Contract","near_prices","addPrices","request_data","getPrices","prices"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,MAAT,CAAgBC,SAAhB,EAA2BC,OAA3B,EAAoC;EACzC,IAAI,CAACD,SAAL,EAAgB;AACd,IAAA,MAAM,IAAIE,KAAJ,CAAUD,OAAV,CAAN,CAAA;AACD,GAAA;AACF;;ACJM,IAAIE,aAAJ,CAAA;;AACP,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAACA,aAAa,CAAC,UAAD,CAAb,GAA4B,CAA7B,CAAb,GAA+C,UAA/C,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,YAAD,CAAb,GAA8B,CAA/B,CAAb,GAAiD,YAAjD,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,QAAD,CAAb,GAA0B,CAA3B,CAAb,GAA6C,QAA7C,CAAA;AACH,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB,CAAA,CAAA;;AAKO,IAAIC,YAAJ,CAAA;;AACP,CAAC,UAAUA,YAAV,EAAwB;EACrBA,YAAY,CAACA,YAAY,CAAC,QAAD,CAAZ,GAAyB,CAA1B,CAAZ,GAA2C,QAA3C,CAAA;EACAA,YAAY,CAACA,YAAY,CAAC,UAAD,CAAZ,GAA2B,CAA5B,CAAZ,GAA6C,UAA7C,CAAA;AACH,CAHD,EAGGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAHf,CAAA;;ACPA;AACO,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;AAC5B,EAAA,IAAI,CAACC,MAAM,CAACC,aAAP,CAAqBF,CAArB,CAAL,EACI,MAAM,IAAIJ,KAAJ,CAAW,CAAiBI,eAAAA,EAAAA,CAAE,EAA9B,CAAN,CAAA;AACP,CAAA;;AACD,SAASG,KAAT,CAAe,GAAGC,IAAlB,EAAwB;AACpB,EAAA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAWC,CAAD,IAAOF,CAAC,CAACC,CAAC,CAACC,CAAD,CAAF,CAA/B,CAAA;;AACA,EAAA,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWP,IAAX,CACVQ,CAAAA,OADU,EAEVC,CAAAA,MAFU,CAEH,CAACC,GAAD,EAAMC,CAAN,KAAaD,GAAG,GAAGT,IAAI,CAACS,GAAD,EAAMC,CAAC,CAACN,MAAR,CAAP,GAAyBM,CAAC,CAACN,MAFxC,EAEiDO,SAFjD,CAAf,CAAA;EAGA,MAAMC,MAAM,GAAGb,IAAI,CAACS,MAAL,CAAY,CAACC,GAAD,EAAMC,CAAN,KAAaD,GAAG,GAAGT,IAAI,CAACS,GAAD,EAAMC,CAAC,CAACE,MAAR,CAAP,GAAyBF,CAAC,CAACE,MAAvD,EAAgED,SAAhE,CAAf,CAAA;EACA,OAAO;IAAEP,MAAF;AAAUQ,IAAAA,MAAAA;GAAjB,CAAA;AACH,CAAA;;AACD,SAASC,QAAT,CAAkBA,QAAlB,EAA4B;EACxB,OAAO;IACHT,MAAM,EAAGU,MAAD,IAAY;MAChB,IAAI,CAACT,KAAK,CAACU,OAAN,CAAcD,MAAd,CAAD,IAA2BA,MAAM,CAACE,MAAP,IAAiB,OAAOF,MAAM,CAAC,CAAD,CAAb,KAAqB,QAArE,EACI,MAAM,IAAIvB,KAAJ,CAAU,qDAAV,CAAN,CAAA;AACJ,MAAA,OAAOuB,MAAM,CAACG,GAAP,CAAYP,CAAD,IAAO;QACrBhB,YAAY,CAACgB,CAAD,CAAZ,CAAA;QACA,IAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIG,QAAQ,CAACG,MAA3B,EACI,MAAM,IAAIzB,KAAJ,CAAW,CAAgCmB,8BAAAA,EAAAA,CAAE,eAAcG,QAAQ,CAACG,MAAO,CAAA,CAAA,CAA3E,CAAN,CAAA;QACJ,OAAOH,QAAQ,CAACH,CAAD,CAAf,CAAA;AACH,OALM,CAAP,CAAA;KAJD;IAWHE,MAAM,EAAGM,KAAD,IAAW;MACf,IAAI,CAACb,KAAK,CAACU,OAAN,CAAcG,KAAd,CAAD,IAA0BA,KAAK,CAACF,MAAN,IAAgB,OAAOE,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAlE,EACI,MAAM,IAAI3B,KAAJ,CAAU,kDAAV,CAAN,CAAA;AACJ,MAAA,OAAO2B,KAAK,CAACD,GAAN,CAAWE,MAAD,IAAY;AACzB,QAAA,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EACI,MAAM,IAAI5B,KAAJ,CAAW,CAAA,oCAAA,EAAsC4B,MAAO,CAAA,CAAxD,CAAN,CAAA;AACJ,QAAA,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,OAAT,CAAiBF,MAAjB,CAAd,CAAA;AACA,QAAA,IAAIC,KAAK,KAAK,CAAC,CAAf,EACI,MAAM,IAAI7B,KAAJ,CAAW,CAAmB4B,iBAAAA,EAAAA,MAAO,CAAcN,YAAAA,EAAAA,QAAS,EAA5D,CAAN,CAAA;AACJ,QAAA,OAAOO,KAAP,CAAA;AACH,OAPM,CAAP,CAAA;AAQH,KAAA;GAtBL,CAAA;AAwBH,CAAA;;AACD,SAASE,IAAT,CAAcC,SAAS,GAAG,EAA1B,EAA8B;EAC1B,IAAI,OAAOA,SAAP,KAAqB,QAAzB,EACI,MAAM,IAAIhC,KAAJ,CAAU,iCAAV,CAAN,CAAA;EACJ,OAAO;IACHa,MAAM,EAAGE,IAAD,IAAU;MACd,IAAI,CAACD,KAAK,CAACU,OAAN,CAAcT,IAAd,CAAD,IAAyBA,IAAI,CAACU,MAAL,IAAe,OAAOV,IAAI,CAAC,CAAD,CAAX,KAAmB,QAA/D,EACI,MAAM,IAAIf,KAAJ,CAAU,8CAAV,CAAN,CAAA;;AACJ,MAAA,KAAK,IAAImB,CAAT,IAAcJ,IAAd,EACI,IAAI,OAAOI,CAAP,KAAa,QAAjB,EACI,MAAM,IAAInB,KAAJ,CAAW,CAAgCmB,8BAAAA,EAAAA,CAAE,EAA7C,CAAN,CAAA;;AACR,MAAA,OAAOJ,IAAI,CAACgB,IAAL,CAAUC,SAAV,CAAP,CAAA;KAPD;IASHX,MAAM,EAAGY,EAAD,IAAQ;MACZ,IAAI,OAAOA,EAAP,KAAc,QAAlB,EACI,MAAM,IAAIjC,KAAJ,CAAU,oCAAV,CAAN,CAAA;AACJ,MAAA,OAAOiC,EAAE,CAACC,KAAH,CAASF,SAAT,CAAP,CAAA;AACH,KAAA;GAbL,CAAA;AAeH,CAAA;;AACD,SAASG,OAAT,CAAiBC,IAAjB,EAAuBC,GAAG,GAAG,GAA7B,EAAkC;EAC9BlC,YAAY,CAACiC,IAAD,CAAZ,CAAA;EACA,IAAI,OAAOC,GAAP,KAAe,QAAnB,EACI,MAAM,IAAIrC,KAAJ,CAAU,8BAAV,CAAN,CAAA;EACJ,OAAO;IACHa,MAAM,CAACyB,IAAD,EAAO;MACT,IAAI,CAACxB,KAAK,CAACU,OAAN,CAAcc,IAAd,CAAD,IAAyBA,IAAI,CAACb,MAAL,IAAe,OAAOa,IAAI,CAAC,CAAD,CAAX,KAAmB,QAA/D,EACI,MAAM,IAAItC,KAAJ,CAAU,iDAAV,CAAN,CAAA;;AACJ,MAAA,KAAK,IAAImB,CAAT,IAAcmB,IAAd,EACI,IAAI,OAAOnB,CAAP,KAAa,QAAjB,EACI,MAAM,IAAInB,KAAJ,CAAW,CAAmCmB,iCAAAA,EAAAA,CAAE,EAAhD,CAAN,CAAA;;AACR,MAAA,OAAQmB,IAAI,CAACb,MAAL,GAAcW,IAAf,GAAuB,CAA9B,EACIE,IAAI,CAACC,IAAL,CAAUF,GAAV,CAAA,CAAA;;AACJ,MAAA,OAAOC,IAAP,CAAA;KATD;;IAWHjB,MAAM,CAACM,KAAD,EAAQ;MACV,IAAI,CAACb,KAAK,CAACU,OAAN,CAAcG,KAAd,CAAD,IAA0BA,KAAK,CAACF,MAAN,IAAgB,OAAOE,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAlE,EACI,MAAM,IAAI3B,KAAJ,CAAU,iDAAV,CAAN,CAAA;;AACJ,MAAA,KAAK,IAAImB,CAAT,IAAcQ,KAAd,EACI,IAAI,OAAOR,CAAP,KAAa,QAAjB,EACI,MAAM,IAAInB,KAAJ,CAAW,CAAmCmB,iCAAAA,EAAAA,CAAE,EAAhD,CAAN,CAAA;;AACR,MAAA,IAAIqB,GAAG,GAAGb,KAAK,CAACF,MAAhB,CAAA;MACA,IAAKe,GAAG,GAAGJ,IAAP,GAAe,CAAnB,EACI,MAAM,IAAIpC,KAAJ,CAAU,2DAAV,CAAN,CAAA;;AACJ,MAAA,OAAOwC,GAAG,GAAG,CAAN,IAAWb,KAAK,CAACa,GAAG,GAAG,CAAP,CAAL,KAAmBH,GAArC,EAA0CG,GAAG,EAA7C,EAAiD;AAC7C,QAAA,IAAI,EAAG,CAACA,GAAG,GAAG,CAAP,IAAYJ,IAAb,GAAqB,CAAvB,CAAJ,EACI,MAAM,IAAIpC,KAAJ,CAAU,8CAAV,CAAN,CAAA;AACP,OAAA;;AACD,MAAA,OAAO2B,KAAK,CAACc,KAAN,CAAY,CAAZ,EAAeD,GAAf,CAAP,CAAA;AACH,KAAA;;GAzBL,CAAA;AA2BH,CAAA;;AACD,SAASE,SAAT,CAAmBC,EAAnB,EAAuB;EACnB,IAAI,OAAOA,EAAP,KAAc,UAAlB,EACI,MAAM,IAAI3C,KAAJ,CAAU,iCAAV,CAAN,CAAA;EACJ,OAAO;IAAEa,MAAM,EAAGE,IAAD,IAAUA,IAApB;AAA0BM,IAAAA,MAAM,EAAGY,EAAD,IAAQU,EAAE,CAACV,EAAD,CAAA;GAAnD,CAAA;AACH,CAAA;;AACD,SAASW,YAAT,CAAsBN,IAAtB,EAA4BvB,IAA5B,EAAkCkB,EAAlC,EAAsC;EAClC,IAAIlB,IAAI,GAAG,CAAX,EACI,MAAM,IAAIf,KAAJ,CAAW,CAAA,yBAAA,EAA2Be,IAAK,CAAA,4BAAA,CAA3C,CAAN,CAAA;EACJ,IAAIkB,EAAE,GAAG,CAAT,EACI,MAAM,IAAIjC,KAAJ,CAAW,CAAA,uBAAA,EAAyBiC,EAAG,CAAA,4BAAA,CAAvC,CAAN,CAAA;AACJ,EAAA,IAAI,CAACnB,KAAK,CAACU,OAAN,CAAcc,IAAd,CAAL,EACI,MAAM,IAAItC,KAAJ,CAAU,oCAAV,CAAN,CAAA;AACJ,EAAA,IAAI,CAACsC,IAAI,CAACb,MAAV,EACI,OAAO,EAAP,CAAA;EACJ,IAAIoB,GAAG,GAAG,CAAV,CAAA;EACA,MAAMC,GAAG,GAAG,EAAZ,CAAA;AACA,EAAA,MAAMvB,MAAM,GAAGT,KAAK,CAACC,IAAN,CAAWuB,IAAX,CAAf,CAAA;AACAf,EAAAA,MAAM,CAACwB,OAAP,CAAgBC,CAAD,IAAO;IAClB7C,YAAY,CAAC6C,CAAD,CAAZ,CAAA;AACA,IAAA,IAAIA,CAAC,GAAG,CAAJ,IAASA,CAAC,IAAIjC,IAAlB,EACI,MAAM,IAAIf,KAAJ,CAAW,CAAiBgD,eAAAA,EAAAA,CAAE,EAA9B,CAAN,CAAA;GAHR,CAAA,CAAA;;AAKA,EAAA,OAAO,IAAP,EAAa;IACT,IAAIC,KAAK,GAAG,CAAZ,CAAA;IACA,IAAIC,IAAI,GAAG,IAAX,CAAA;;AACA,IAAA,KAAK,IAAI/B,CAAC,GAAG0B,GAAb,EAAkB1B,CAAC,GAAGI,MAAM,CAACE,MAA7B,EAAqCN,CAAC,EAAtC,EAA0C;AACtC,MAAA,MAAMgC,KAAK,GAAG5B,MAAM,CAACJ,CAAD,CAApB,CAAA;AACA,MAAA,MAAMiC,SAAS,GAAGrC,IAAI,GAAGkC,KAAP,GAAeE,KAAjC,CAAA;;MACA,IAAI,CAAC9C,MAAM,CAACC,aAAP,CAAqB8C,SAArB,CAAD,IACCrC,IAAI,GAAGkC,KAAR,GAAiBlC,IAAjB,KAA0BkC,KAD1B,IAEAG,SAAS,GAAGD,KAAZ,KAAsBpC,IAAI,GAAGkC,KAFjC,EAEwC;AACpC,QAAA,MAAM,IAAIjD,KAAJ,CAAU,8BAAV,CAAN,CAAA;AACH,OAAA;;MACDiD,KAAK,GAAGG,SAAS,GAAGnB,EAApB,CAAA;MACAV,MAAM,CAACJ,CAAD,CAAN,GAAYkC,IAAI,CAACC,KAAL,CAAWF,SAAS,GAAGnB,EAAvB,CAAZ,CAAA;MACA,IAAI,CAAC5B,MAAM,CAACC,aAAP,CAAqBiB,MAAM,CAACJ,CAAD,CAA3B,CAAD,IAAoCI,MAAM,CAACJ,CAAD,CAAN,GAAYc,EAAZ,GAAiBgB,KAAjB,KAA2BG,SAAnE,EACI,MAAM,IAAIpD,KAAJ,CAAU,8BAAV,CAAN,CAAA;AACJ,MAAA,IAAI,CAACkD,IAAL,EACI,SADJ,KAEK,IAAI,CAAC3B,MAAM,CAACJ,CAAD,CAAX,EACD0B,GAAG,GAAG1B,CAAN,CADC,KAGD+B,IAAI,GAAG,KAAP,CAAA;AACP,KAAA;;IACDJ,GAAG,CAACP,IAAJ,CAASU,KAAT,CAAA,CAAA;AACA,IAAA,IAAIC,IAAJ,EACI,MAAA;AACP,GAAA;;EACD,KAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACb,MAAL,GAAc,CAAlB,IAAuBa,IAAI,CAACnB,CAAD,CAAJ,KAAY,CAAnD,EAAsDA,CAAC,EAAvD,EACI2B,GAAG,CAACP,IAAJ,CAAS,CAAT,CAAA,CAAA;;EACJ,OAAOO,GAAG,CAAC9B,OAAJ,EAAP,CAAA;AACH,CAAA;;AACD,MAAMuC,GAAG,GAAG,CAAC7C,CAAD,EAAIC,CAAJ,KAAW,CAACA,CAAD,GAAKD,CAAL,GAAS6C,GAAG,CAAC5C,CAAD,EAAID,CAAC,GAAGC,CAAR,CAAnC,CAAA;;AACA,MAAM6C,WAAW,GAAG,CAACzC,IAAD,EAAOkB,EAAP,KAAclB,IAAI,IAAIkB,EAAE,GAAGsB,GAAG,CAACxC,IAAD,EAAOkB,EAAP,CAAZ,CAAtC,CAAA;;AACA,SAASwB,aAAT,CAAuBnB,IAAvB,EAA6BvB,IAA7B,EAAmCkB,EAAnC,EAAuCE,OAAvC,EAAgD;AAC5C,EAAA,IAAI,CAACrB,KAAK,CAACU,OAAN,CAAcc,IAAd,CAAL,EACI,MAAM,IAAItC,KAAJ,CAAU,qCAAV,CAAN,CAAA;AACJ,EAAA,IAAIe,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAAxB,EACI,MAAM,IAAIf,KAAJ,CAAW,CAA4Be,0BAAAA,EAAAA,IAAK,EAA5C,CAAN,CAAA;AACJ,EAAA,IAAIkB,EAAE,IAAI,CAAN,IAAWA,EAAE,GAAG,EAApB,EACI,MAAM,IAAIjC,KAAJ,CAAW,CAA0BiC,wBAAAA,EAAAA,EAAG,EAAxC,CAAN,CAAA;;EACJ,IAAIuB,WAAW,CAACzC,IAAD,EAAOkB,EAAP,CAAX,GAAwB,EAA5B,EAAgC;AAC5B,IAAA,MAAM,IAAIjC,KAAJ,CAAW,CAAA,mCAAA,EAAqCe,IAAK,CAAMkB,IAAAA,EAAAA,EAAG,CAAauB,WAAAA,EAAAA,WAAW,CAACzC,IAAD,EAAOkB,EAAP,CAAW,EAAjG,CAAN,CAAA;AACH,GAAA;;EACD,IAAIgB,KAAK,GAAG,CAAZ,CAAA;EACA,IAAIJ,GAAG,GAAG,CAAV,CAAA;AACA,EAAA,MAAMa,IAAI,GAAG,CAAKzB,IAAAA,EAAL,GAAU,CAAvB,CAAA;EACA,MAAMa,GAAG,GAAG,EAAZ,CAAA;;AACA,EAAA,KAAK,MAAM1C,CAAX,IAAgBkC,IAAhB,EAAsB;IAClBnC,YAAY,CAACC,CAAD,CAAZ,CAAA;AACA,IAAA,IAAIA,CAAC,IAAI,CAAKW,IAAAA,IAAd,EACI,MAAM,IAAIf,KAAJ,CAAW,CAAmCI,iCAAAA,EAAAA,CAAE,CAAQW,MAAAA,EAAAA,IAAK,EAA7D,CAAN,CAAA;AACJkC,IAAAA,KAAK,GAAIA,KAAK,IAAIlC,IAAV,GAAkBX,CAA1B,CAAA;AACA,IAAA,IAAIyC,GAAG,GAAG9B,IAAN,GAAa,EAAjB,EACI,MAAM,IAAIf,KAAJ,CAAW,CAAoC6C,kCAAAA,EAAAA,GAAI,CAAQ9B,MAAAA,EAAAA,IAAK,EAAhE,CAAN,CAAA;AACJ8B,IAAAA,GAAG,IAAI9B,IAAP,CAAA;;IACA,OAAO8B,GAAG,IAAIZ,EAAd,EAAkBY,GAAG,IAAIZ,EAAzB,EACIa,GAAG,CAACP,IAAJ,CAAS,CAAEU,KAAK,IAAKJ,GAAG,GAAGZ,EAAjB,GAAwByB,IAAzB,MAAmC,CAA5C,CAAA,CAAA;;AACJT,IAAAA,KAAK,IAAI,CAAA,IAAKJ,GAAL,GAAW,CAApB,CAAA;AACH,GAAA;;AACDI,EAAAA,KAAK,GAAIA,KAAK,IAAKhB,EAAE,GAAGY,GAAhB,GAAwBa,IAAhC,CAAA;AACA,EAAA,IAAI,CAACvB,OAAD,IAAYU,GAAG,IAAI9B,IAAvB,EACI,MAAM,IAAIf,KAAJ,CAAU,gBAAV,CAAN,CAAA;AACJ,EAAA,IAAI,CAACmC,OAAD,IAAYc,KAAhB,EACI,MAAM,IAAIjD,KAAJ,CAAW,CAAA,kBAAA,EAAoBiD,KAAM,CAAA,CAArC,CAAN,CAAA;AACJ,EAAA,IAAId,OAAO,IAAIU,GAAG,GAAG,CAArB,EACIC,GAAG,CAACP,IAAJ,CAASU,KAAK,KAAK,CAAnB,CAAA,CAAA;AACJ,EAAA,OAAOH,GAAP,CAAA;AACH,CAAA;;AACD,SAASa,KAAT,CAAeC,GAAf,EAAoB;EAChBzD,YAAY,CAACyD,GAAD,CAAZ,CAAA;EACA,OAAO;IACH/C,MAAM,EAAGgD,KAAD,IAAW;MACf,IAAI,EAAEA,KAAK,YAAYC,UAAnB,CAAJ,EACI,MAAM,IAAI9D,KAAJ,CAAU,yCAAV,CAAN,CAAA;AACJ,MAAA,OAAO4C,YAAY,CAAC9B,KAAK,CAACC,IAAN,CAAW8C,KAAX,CAAD,EAAoB,CAAA,IAAK,CAAzB,EAA4BD,GAA5B,CAAnB,CAAA;KAJD;IAMHvC,MAAM,EAAGE,MAAD,IAAY;MAChB,IAAI,CAACT,KAAK,CAACU,OAAN,CAAcD,MAAd,CAAD,IAA2BA,MAAM,CAACE,MAAP,IAAiB,OAAOF,MAAM,CAAC,CAAD,CAAb,KAAqB,QAArE,EACI,MAAM,IAAIvB,KAAJ,CAAU,+CAAV,CAAN,CAAA;AACJ,MAAA,OAAO8D,UAAU,CAAC/C,IAAX,CAAgB6B,YAAY,CAACrB,MAAD,EAASqC,GAAT,EAAc,CAAK,IAAA,CAAnB,CAA5B,CAAP,CAAA;AACH,KAAA;GAVL,CAAA;AAYH,CAAA;;AACD,SAASG,MAAT,CAAgB3B,IAAhB,EAAsB4B,UAAU,GAAG,KAAnC,EAA0C;EACtC7D,YAAY,CAACiC,IAAD,CAAZ,CAAA;AACA,EAAA,IAAIA,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,EAAxB,EACI,MAAM,IAAIpC,KAAJ,CAAU,mCAAV,CAAN,CAAA;EACJ,IAAIwD,WAAW,CAAC,CAAD,EAAIpB,IAAJ,CAAX,GAAuB,EAAvB,IAA6BoB,WAAW,CAACpB,IAAD,EAAO,CAAP,CAAX,GAAuB,EAAxD,EACI,MAAM,IAAIpC,KAAJ,CAAU,wBAAV,CAAN,CAAA;EACJ,OAAO;IACHa,MAAM,EAAGgD,KAAD,IAAW;MACf,IAAI,EAAEA,KAAK,YAAYC,UAAnB,CAAJ,EACI,MAAM,IAAI9D,KAAJ,CAAU,0CAAV,CAAN,CAAA;AACJ,MAAA,OAAOyD,aAAa,CAAC3C,KAAK,CAACC,IAAN,CAAW8C,KAAX,CAAD,EAAoB,CAApB,EAAuBzB,IAAvB,EAA6B,CAAC4B,UAA9B,CAApB,CAAA;KAJD;IAMH3C,MAAM,EAAGE,MAAD,IAAY;MAChB,IAAI,CAACT,KAAK,CAACU,OAAN,CAAcD,MAAd,CAAD,IAA2BA,MAAM,CAACE,MAAP,IAAiB,OAAOF,MAAM,CAAC,CAAD,CAAb,KAAqB,QAArE,EACI,MAAM,IAAIvB,KAAJ,CAAU,gDAAV,CAAN,CAAA;AACJ,MAAA,OAAO8D,UAAU,CAAC/C,IAAX,CAAgB0C,aAAa,CAAClC,MAAD,EAASa,IAAT,EAAe,CAAf,EAAkB4B,UAAlB,CAA7B,CAAP,CAAA;AACH,KAAA;GAVL,CAAA;AAYH,CAAA;;AACD,SAASC,aAAT,CAAuBtB,EAAvB,EAA2B;EACvB,IAAI,OAAOA,EAAP,KAAc,UAAlB,EACI,MAAM,IAAI3C,KAAJ,CAAU,qCAAV,CAAN,CAAA;EACJ,OAAO,UAAU,GAAGQ,IAAb,EAAmB;IACtB,IAAI;AACA,MAAA,OAAOmC,EAAE,CAACuB,KAAH,CAAS,IAAT,EAAe1D,IAAf,CAAP,CAAA;AACH,KAFD,CAGA,OAAO2D,CAAP,EAAU,EAAG;GAJjB,CAAA;AAMH,CAAA;AA6BM,MAAMC,MAAM,GAAG7D,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kBAAD,CAApB,EAA0CS,IAAI,CAAC,EAAD,CAA9C,CAApB,CAAA;AACA,MAAMsC,MAAM,GAAG9D,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kCAAD,CAApB,EAA0Da,OAAO,CAAC,CAAD,CAAjE,EAAsEJ,IAAI,CAAC,EAAD,CAA1E,CAApB,CAAA;AACkBxB,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kCAAD,CAApB,EAA0Da,OAAO,CAAC,CAAD,CAAjE,EAAsEJ,IAAI,CAAC,EAAD,CAA1E,EAAvB;AACwBxB,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kCAAD,CAApB,EAA0DS,IAAI,CAAC,EAAD,CAA9D,EAAoEW,SAAS,CAAE4B,CAAD,IAAOA,CAAC,CAACC,WAAF,EAAA,CAAgBC,OAAhB,CAAwB,IAAxB,EAA8B,GAA9B,CAAA,CAAmCA,OAAnC,CAA2C,OAA3C,EAAoD,GAApD,CAAR,CAA7E,EAA7B;AACA,MAAMC,MAAM,GAAGlE,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kEAAD,CAApB,EAA0Fa,OAAO,CAAC,CAAD,CAAjG,EAAsGJ,IAAI,CAAC,EAAD,CAA1G,CAApB,CAAA;AACA,MAAM2C,SAAS,GAAGnE,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kEAAD,CAApB,EAA0Fa,OAAO,CAAC,CAAD,CAAjG,EAAsGJ,IAAI,CAAC,EAAD,CAA1G,CAAvB,CAAA;;AACP,MAAM4C,SAAS,GAAIC,GAAD,IAASrE,KAAK,CAACoD,KAAK,CAAC,EAAD,CAAN,EAAYrC,QAAQ,CAACsD,GAAD,CAApB,EAA2B7C,IAAI,CAAC,EAAD,CAA/B,CAAhC,CAAA;;AACO,MAAM8C,MAAM,GAAGF,SAAS,CAAC,4DAAD,CAAxB,CAAA;AACqBA,SAAS,CAAC,4DAAD,EAA9B;AACkBA,SAAS,CAAC,4DAAD,EAA3B;AACP,MAAMG,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAAtB,CAAA;AACO,MAAMC,SAAS,GAAG;EACrBlE,MAAM,CAACyB,IAAD,EAAO;IACT,IAAIQ,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,IAAI,CAACb,MAAzB,EAAiCN,CAAC,IAAI,CAAtC,EAAyC;MACrC,MAAM6D,KAAK,GAAG1C,IAAI,CAAC2C,QAAL,CAAc9D,CAAd,EAAiBA,CAAC,GAAG,CAArB,CAAd,CAAA;AACA2B,MAAAA,GAAG,IAAI+B,MAAM,CAAChE,MAAP,CAAcmE,KAAd,CAAqBE,CAAAA,QAArB,CAA8BJ,aAAa,CAACE,KAAK,CAACvD,MAAP,CAA3C,EAA2D,GAA3D,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAOqB,GAAP,CAAA;GAPiB;;EASrBzB,MAAM,CAAC8D,GAAD,EAAM;IACR,IAAIrC,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAI3B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,GAAG,CAAC1D,MAAxB,EAAgCN,CAAC,IAAI,EAArC,EAAyC;MACrC,MAAMsB,KAAK,GAAG0C,GAAG,CAAC1C,KAAJ,CAAUtB,CAAV,EAAaA,CAAC,GAAG,EAAjB,CAAd,CAAA;MACA,MAAMiE,QAAQ,GAAGN,aAAa,CAAChD,OAAd,CAAsBW,KAAK,CAAChB,MAA5B,CAAjB,CAAA;AACA,MAAA,MAAMuD,KAAK,GAAGH,MAAM,CAACxD,MAAP,CAAcoB,KAAd,CAAd,CAAA;;AACA,MAAA,KAAK,IAAI4C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACvD,MAAN,GAAe2D,QAAnC,EAA6CC,CAAC,EAA9C,EAAkD;AAC9C,QAAA,IAAIL,KAAK,CAACK,CAAD,CAAL,KAAa,CAAjB,EACI,MAAM,IAAIrF,KAAJ,CAAU,0BAAV,CAAN,CAAA;AACP,OAAA;;MACD8C,GAAG,GAAGA,GAAG,CAACwC,MAAJ,CAAWxE,KAAK,CAACC,IAAN,CAAWiE,KAAK,CAACvC,KAAN,CAAYuC,KAAK,CAACvD,MAAN,GAAe2D,QAA3B,CAAX,CAAX,CAAN,CAAA;AACH,KAAA;;AACD,IAAA,OAAOtB,UAAU,CAAC/C,IAAX,CAAgB+B,GAAhB,CAAP,CAAA;AACH,GAAA;;AAtBoB,CAAlB,CAAA;AAyBP,MAAMyC,aAAa,GAAGhF,KAAK,CAACe,QAAQ,CAAC,kCAAD,CAAT,EAA+CS,IAAI,CAAC,EAAD,CAAnD,CAA3B,CAAA;AACA,MAAMyD,kBAAkB,GAAG,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,UAAjD,CAA3B,CAAA;;AACA,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,EAAA,MAAM/E,CAAC,GAAG+E,GAAG,IAAI,EAAjB,CAAA;AACA,EAAA,IAAIC,GAAG,GAAG,CAACD,GAAG,GAAG,SAAP,KAAqB,CAA/B,CAAA;;AACA,EAAA,KAAK,IAAIvE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqE,kBAAkB,CAAC/D,MAAvC,EAA+CN,CAAC,EAAhD,EAAoD;AAChD,IAAA,IAAI,CAAER,CAAC,IAAIQ,CAAN,GAAW,CAAZ,MAAmB,CAAvB,EACIwE,GAAG,IAAIH,kBAAkB,CAACrE,CAAD,CAAzB,CAAA;AACP,GAAA;;AACD,EAAA,OAAOwE,GAAP,CAAA;AACH,CAAA;;AACD,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,aAAa,GAAG,CAArD,EAAwD;AACpD,EAAA,MAAMC,GAAG,GAAGH,MAAM,CAACpE,MAAnB,CAAA;EACA,IAAIkE,GAAG,GAAG,CAAV,CAAA;;EACA,KAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,GAApB,EAAyB7E,CAAC,EAA1B,EAA8B;AAC1B,IAAA,MAAMP,CAAC,GAAGiF,MAAM,CAACI,UAAP,CAAkB9E,CAAlB,CAAV,CAAA;AACA,IAAA,IAAIP,CAAC,GAAG,EAAJ,IAAUA,CAAC,GAAG,GAAlB,EACI,MAAM,IAAIZ,KAAJ,CAAW,CAAkB6F,gBAAAA,EAAAA,MAAO,GAApC,CAAN,CAAA;IACJF,GAAG,GAAGF,aAAa,CAACE,GAAD,CAAb,GAAsB/E,CAAC,IAAI,CAAjC,CAAA;AACH,GAAA;;AACD+E,EAAAA,GAAG,GAAGF,aAAa,CAACE,GAAD,CAAnB,CAAA;;EACA,KAAK,IAAIxE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6E,GAApB,EAAyB7E,CAAC,EAA1B,EACIwE,GAAG,GAAGF,aAAa,CAACE,GAAD,CAAb,GAAsBE,MAAM,CAACI,UAAP,CAAkB9E,CAAlB,CAAA,GAAuB,IAAnD,CAAA;;AACJ,EAAA,KAAK,IAAI+E,CAAT,IAAcJ,KAAd,EACIH,GAAG,GAAGF,aAAa,CAACE,GAAD,CAAb,GAAqBO,CAA3B,CAAA;;AACJ,EAAA,KAAK,IAAI/E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EACIwE,GAAG,GAAGF,aAAa,CAACE,GAAD,CAAnB,CAAA;;AACJA,EAAAA,GAAG,IAAII,aAAP,CAAA;AACA,EAAA,OAAOR,aAAa,CAAC1E,MAAd,CAAqB4C,aAAa,CAAC,CAACkC,GAAG,GAAG,KAAK,EAAZ,CAAD,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,KAAzB,CAAlC,CAAP,CAAA;AACH,CAAA;;AACD,SAASQ,SAAT,CAAmBC,QAAnB,EAA6B;EACzB,MAAMC,cAAc,GAAGD,QAAQ,KAAK,QAAb,GAAwB,CAAxB,GAA4B,UAAnD,CAAA;;AACA,EAAA,MAAME,MAAM,GAAGvC,MAAM,CAAC,CAAD,CAArB,CAAA;;AACA,EAAA,MAAMwC,SAAS,GAAGD,MAAM,CAACjF,MAAzB,CAAA;AACA,EAAA,MAAMmF,OAAO,GAAGF,MAAM,CAACzF,MAAvB,CAAA;AACA,EAAA,MAAM4F,eAAe,GAAGxC,aAAa,CAACsC,SAAD,CAArC,CAAA;;EACA,SAAS1F,MAAT,CAAgBgF,MAAhB,EAAwBC,KAAxB,EAA+BY,KAAK,GAAG,EAAvC,EAA2C;AACvC,IAAA,IAAI,OAAOb,MAAP,KAAkB,QAAtB,EACI,MAAM,IAAI7F,KAAJ,CAAW,CAAA,2CAAA,EAA6C,OAAO6F,MAAO,EAAtE,CAAN,CAAA;AACJ,IAAA,IAAI,CAAC/E,KAAK,CAACU,OAAN,CAAcsE,KAAd,CAAD,IAA0BA,KAAK,CAACrE,MAAN,IAAgB,OAAOqE,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAlE,EACI,MAAM,IAAI9F,KAAJ,CAAW,CAAsD,oDAAA,EAAA,OAAO8F,KAAM,CAAA,CAA9E,CAAN,CAAA;IACJ,MAAMa,YAAY,GAAGd,MAAM,CAACpE,MAAP,GAAgB,CAAhB,GAAoBqE,KAAK,CAACrE,MAA/C,CAAA;AACA,IAAA,IAAIiF,KAAK,KAAK,KAAV,IAAmBC,YAAY,GAAGD,KAAtC,EACI,MAAM,IAAIE,SAAJ,CAAe,CAAA,OAAA,EAASD,YAAa,CAAiBD,eAAAA,EAAAA,KAAM,EAA5D,CAAN,CAAA;AACJb,IAAAA,MAAM,GAAGA,MAAM,CAACgB,WAAP,EAAT,CAAA;AACA,IAAA,OAAQ,GAAEhB,MAAO,CAAA,CAAA,EAAGN,aAAa,CAAC1E,MAAd,CAAqBiF,KAArB,CAA4B,CAAEF,EAAAA,YAAY,CAACC,MAAD,EAASC,KAAT,EAAgBO,cAAhB,CAAgC,CAA9F,CAAA,CAAA;AACH,GAAA;;AACD,EAAA,SAAShF,MAAT,CAAgB8D,GAAhB,EAAqBuB,KAAK,GAAG,EAA7B,EAAiC;AAC7B,IAAA,IAAI,OAAOvB,GAAP,KAAe,QAAnB,EACI,MAAM,IAAInF,KAAJ,CAAW,CAAA,0CAAA,EAA4C,OAAOmF,GAAI,EAAlE,CAAN,CAAA;AACJ,IAAA,IAAIA,GAAG,CAAC1D,MAAJ,GAAa,CAAb,IAAmBiF,KAAK,KAAK,KAAV,IAAmBvB,GAAG,CAAC1D,MAAJ,GAAaiF,KAAvD,EACI,MAAM,IAAIE,SAAJ,CAAe,CAAuBzB,qBAAAA,EAAAA,GAAG,CAAC1D,MAAO,CAAI0D,EAAAA,EAAAA,GAAI,CAAkBuB,gBAAAA,EAAAA,KAAM,GAAjF,CAAN,CAAA;AACJ,IAAA,MAAMI,OAAO,GAAG3B,GAAG,CAAC0B,WAAJ,EAAhB,CAAA;AACA,IAAA,IAAI1B,GAAG,KAAK2B,OAAR,IAAmB3B,GAAG,KAAKA,GAAG,CAACZ,WAAJ,EAA/B,EACI,MAAM,IAAIvE,KAAJ,CAAW,uCAAX,CAAN,CAAA;AACJmF,IAAAA,GAAG,GAAG2B,OAAN,CAAA;AACA,IAAA,MAAMC,QAAQ,GAAG5B,GAAG,CAAC6B,WAAJ,CAAgB,GAAhB,CAAjB,CAAA;AACA,IAAA,IAAID,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,CAAC,CAApC,EACI,MAAM,IAAI/G,KAAJ,CAAW,yDAAX,CAAN,CAAA;IACJ,MAAM6F,MAAM,GAAGV,GAAG,CAAC1C,KAAJ,CAAU,CAAV,EAAasE,QAAb,CAAf,CAAA;;IACA,MAAMT,MAAM,GAAGnB,GAAG,CAAC1C,KAAJ,CAAUsE,QAAQ,GAAG,CAArB,CAAf,CAAA;;IACA,IAAIT,MAAM,CAAC7E,MAAP,GAAgB,CAApB,EACI,MAAM,IAAIzB,KAAJ,CAAU,yCAAV,CAAN,CAAA;AACJ,IAAA,MAAM8F,KAAK,GAAGP,aAAa,CAAClE,MAAd,CAAqBiF,MAArB,CAA6B7D,CAAAA,KAA7B,CAAmC,CAAnC,EAAsC,CAAC,CAAvC,CAAd,CAAA;IACA,MAAMwE,GAAG,GAAGrB,YAAY,CAACC,MAAD,EAASC,KAAT,EAAgBO,cAAhB,CAAxB,CAAA;AACA,IAAA,IAAI,CAACC,MAAM,CAACY,QAAP,CAAgBD,GAAhB,CAAL,EACI,MAAM,IAAIjH,KAAJ,CAAW,CAAA,oBAAA,EAAsBmF,GAAI,CAAc8B,YAAAA,EAAAA,GAAI,GAAvD,CAAN,CAAA;IACJ,OAAO;MAAEpB,MAAF;AAAUC,MAAAA,KAAAA;KAAjB,CAAA;AACH,GAAA;;AACD,EAAA,MAAMqB,YAAY,GAAGlD,aAAa,CAAC5C,MAAD,CAAlC,CAAA;;EACA,SAAS+F,aAAT,CAAuBjC,GAAvB,EAA4B;IACxB,MAAM;MAAEU,MAAF;AAAUC,MAAAA,KAAAA;AAAV,KAAA,GAAoBzE,MAAM,CAAC8D,GAAD,EAAM,KAAN,CAAhC,CAAA;IACA,OAAO;MAAEU,MAAF;MAAUC,KAAV;MAAiBjC,KAAK,EAAE0C,SAAS,CAACT,KAAD,CAAA;KAAxC,CAAA;AACH,GAAA;;EACD,OAAO;IAAEjF,MAAF;IAAUQ,MAAV;IAAkB+F,aAAlB;IAAiCD,YAAjC;IAA+CZ,SAA/C;IAA0DE,eAA1D;AAA2ED,IAAAA,OAAAA;GAAlF,CAAA;AACH,CAAA;;AACqBL,SAAS,CAAC,QAAD,EAAxB;AACgBA,SAAS,CAAC,SAAD,EAAzB;AACA,MAAMkB,IAAI,GAAG;EAChBxG,MAAM,EAAGyB,IAAD,IAAU,IAAIgF,WAAJ,EAAkBjG,CAAAA,MAAlB,CAAyBiB,IAAzB,CADF;EAEhBjB,MAAM,EAAG8D,GAAD,IAAS,IAAIoC,WAAJ,EAAkB1G,CAAAA,MAAlB,CAAyBsE,GAAzB,CAAA;AAFD,CAAb,CAAA;AAIA,MAAMqC,GAAG,GAAGjH,KAAK,CAACwD,MAAM,CAAC,CAAD,CAAP,EAAYzC,QAAQ,CAAC,kBAAD,CAApB,EAA0CS,IAAI,CAAC,EAAD,CAA9C,EAAoDW,SAAS,CAAE4B,CAAD,IAAO;EACzF,IAAI,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAAC7C,MAAF,GAAW,CAAxC,EACI,MAAM,IAAImF,SAAJ,CAAe,CAAA,iCAAA,EAAmC,OAAOtC,CAAE,gBAAeA,CAAC,CAAC7C,MAAO,CAAA,CAAnF,CAAN,CAAA;EACJ,OAAO6C,CAAC,CAACuC,WAAF,EAAP,CAAA;AACH,CAJoF,CAA7D,CAAjB,CAAA;AAKP,MAAMY,MAAM,GAAG;EACXJ,IADW;EACLG,GADK;EACApD,MADA;EACQC,MADR;EACgBI,MADhB;EACwBC,SADxB;EACmCG,MADnC;AAC2CE,EAAAA,SAAAA;AAD3C,CAAf,CAAA;AAGwB,CAA0C2C,wCAAAA,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAoB1F,CAAAA,IAApB,CAAyB,IAAzB,CAA+B,CAAjG;;ACvXO,IAAI6F,SAAJ,CAAA;;AACP,CAAC,UAAUA,SAAV,EAAqB;EAClBA,SAAS,CAACA,SAAS,CAAC,SAAD,CAAT,GAAuB,CAAxB,CAAT,GAAsC,SAAtC,CAAA;EACAA,SAAS,CAACA,SAAS,CAAC,WAAD,CAAT,GAAyB,CAA1B,CAAT,GAAwC,WAAxC,CAAA;AACH,CAHD,EAGGA,SAAS,KAAKA,SAAS,GAAG,EAAjB,CAHZ,CAAA;;ACFA,MAAMC,OAAO,GAAG,EAAM,IAAA,GAAN,GAAY,EAA5B,CAAA;AACA,MAAMC,gBAAgB,GAAGD,OAAO,GAAG,EAAnC,CAAA;AAQO,SAASE,eAAT,GAA2B;EAC9BC,GAAG,CAACC,iBAAJ,CAAsB,CAAtB,CAAA,CAAA;AACA,EAAA,OAAOD,GAAG,CAACE,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AAKM,SAASC,oBAAT,GAAgC;EACnCH,GAAG,CAACI,sBAAJ,CAA2B,CAA3B,CAAA,CAAA;AACA,EAAA,OAAOJ,GAAG,CAACE,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AAaM,SAASG,eAAT,GAA2B;EAC9B,OAAOL,GAAG,CAACM,gBAAJ,EAAP,CAAA;AACH,CAAA;AA4CM,SAASC,WAAT,CAAqBC,GAArB,EAA0B;EAC7B,IAAIC,GAAG,GAAGT,GAAG,CAACU,YAAJ,CAAiBF,GAAjB,EAAsB,CAAtB,CAAV,CAAA;;EACA,IAAIC,GAAG,KAAK,EAAZ,EAAgB;AACZ,IAAA,OAAOT,GAAG,CAACE,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,GAFD,MAGK;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;AACJ,CAAA;AAoCM,SAASS,gBAAT,GAA4B;EAC/BX,GAAG,CAACY,kBAAJ,CAAuB,CAAvB,CAAA,CAAA;AACA,EAAA,OAAOZ,GAAG,CAACE,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AACM,SAASvG,KAAT,GAAiB;EACpBqG,GAAG,CAACrG,KAAJ,CAAU,CAAV,CAAA,CAAA;AACA,EAAA,OAAOqG,GAAG,CAACE,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AA0EM,SAASW,YAAT,CAAsBL,GAAtB,EAA2BM,KAA3B,EAAkC;EACrC,IAAIC,KAAK,GAAGf,GAAG,CAACgB,aAAJ,CAAkBR,GAAlB,EAAuBM,KAAvB,EAA8BhB,gBAA9B,CAAZ,CAAA;;EACA,IAAIiB,KAAK,KAAK,EAAd,EAAkB;AACd,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH;;AC9MM,SAASE,IAAT,CAAc;AAAEC,EAAAA,eAAe,GAAG,KAApB;AAA2BC,EAAAA,eAAe,GAAG,KAAA;AAA7C,CAAd,EAAoE;AACvE,EAAA,OAAO,UAAUC,MAAV,EAAkBZ,GAAlB,EAAuBa,UAAvB,EAAmC;AACtC,IAAA,MAAMC,cAAc,GAAGD,UAAU,CAACP,KAAlC,CAAA;;AACAO,IAAAA,UAAU,CAACP,KAAX,GAAmB,UAAU,GAAGtI,IAAb,EAAmB;MAClC,IAAI0I,eAAe,IAAIK,oBAAA,OAAgCA,gBAAA,EAAvD,EAAgF;QAC5E,MAAMvJ,KAAK,CAAC,qBAAD,CAAX,CAAA;AACH,OAAA;;MACD,IAAI,CAACmJ,eAAD,IAAoBI,eAAA,EAAA,GAAyBC,MAAM,CAAC,CAAD,CAAvD,EAA4D;QACxD,MAAMxJ,KAAK,CAAC,yBAAD,CAAX,CAAA;AACH,OAAA;;AACD,MAAA,OAAOsJ,cAAc,CAACpF,KAAf,CAAqB,IAArB,EAA2B1D,IAA3B,CAAP,CAAA;KAPJ,CAAA;GAFJ,CAAA;AAYH,CAAA;AACM,SAASiJ,IAAT,CAAc,EAAd,EAAkB;EACrB,OAAO,UAAUL,MAAV,EAAkBZ,GAAlB,EAAuBa,UAAvB,EAAmC,EAA1C,CAAA;AAEH,CAAA;AACM,SAASK,WAAT,CAAqB;AAAEC,EAAAA,WAAW,GAAG,KAAA;AAAhB,CAArB,EAA8C;AACjD,EAAA,OAAQP,MAAD,IAAY;IACf,OAAO,cAAcA,MAAd,CAAqB;AACV,MAAA,OAAPQ,OAAO,GAAG;QACb,OAAO,IAAIR,MAAJ,EAAP,CAAA;AACH,OAAA;;AACe,MAAA,OAATS,SAAS,GAAG;AACf,QAAA,MAAMC,QAAQ,GAAGP,WAAA,CAAiB,OAAjB,CAAjB,CAAA;QACA,OAAOO,QAAQ,GAAG,IAAKC,CAAAA,YAAL,CAAkBD,QAAlB,CAAH,GAAiC,IAAhD,CAAA;AACH,OAAA;;MACoB,OAAdE,cAAc,CAACC,GAAD,EAAM;QACvBV,YAAA,CAAkB,OAAlB,EAA2B,IAAKW,CAAAA,UAAL,CAAgBD,GAAhB,CAA3B,CAAA,CAAA;AACH,OAAA;;AACc,MAAA,OAARE,QAAQ,GAAG;QACd,OAAOC,IAAI,CAACC,KAAL,CAAWd,KAAA,EAAgB,IAAA,IAA3B,CAAP,CAAA;AACH,OAAA;;MACgB,OAAVW,UAAU,CAACpB,KAAD,EAAQ;AACrB,QAAA,OAAOsB,IAAI,CAACE,SAAL,CAAexB,KAAf,CAAP,CAAA;AACH,OAAA;;MACkB,OAAZiB,YAAY,CAACjB,KAAD,EAAQ;AACvB,QAAA,OAAOsB,IAAI,CAACC,KAAL,CAAWvB,KAAX,CAAP,CAAA;AACH,OAAA;;AACkB,MAAA,OAAZyB,YAAY,CAACC,WAAD,EAAcC,WAAd,EAA2B;AAC1C,QAAA,KAAK,MAAMC,IAAX,IAAmBF,WAAnB,EAAgC;UAC5B,IAAIA,WAAW,CAACE,IAAD,CAAX,CAAkBC,WAAlB,EAA+BC,WAA/B,KAA+CxJ,SAAnD,EAA8D;AAC1DoJ,YAAAA,WAAW,CAACE,IAAD,CAAX,GAAoBF,WAAW,CAACE,IAAD,CAAX,CAAkBC,WAAlB,CAA8BC,WAA9B,CAA0CH,WAAW,CAACC,IAAD,CAArD,CAApB,CAAA;AACH,WAFD,MAGK;AACDF,YAAAA,WAAW,CAACE,IAAD,CAAX,GAAoBD,WAAW,CAACC,IAAD,CAA/B,CAAA;AACH,WAAA;AACJ,SAAA;;AACD,QAAA,OAAOF,WAAP,CAAA;AACH,OAAA;;AACkB,MAAA,OAAZK,YAAY,GAAG;AAClB,QAAA,OAAOlB,WAAP,CAAA;AACH,OAAA;;KAjCL,CAAA;GADJ,CAAA;AAqCH;;;AC1DD,MAAMmB,kBAAkB,GAAG,gCAA3B,CAAA;AACA,MAAMC,YAAY,GAAG,WAArB,CAAA;AAGMC,IAAAA,mBADLtB,WAAW,CAAC,EAAD,WAeTT,IAAI,CAAC,EAAD,WAmBJQ,IAAI,CAAC,EAAD,GAlCP,IAAA,CAAA,MAAA,IAAA,OAAA,GAAA,MACMuB,QADN,CACe;AACbL,EAAAA,WAAW,GAAG;IACZ,IAAKM,CAAAA,WAAL,GAAmB,EAAnB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,SAAS,CAAC;AAAEC,IAAAA,YAAAA;AAAF,GAAD,EAAmB;AAC1BtL,IAAAA,MAAM,CACJ0J,eAAA,EAA2BuB,KAAAA,kBAA3B,IAAiDvB,eAAA,EAA2BwB,KAAAA,YADxE,EAEH,CAAUxB,QAAAA,EAAAA,eAAA,EAAuB,8CAF9B,CAAN,CAAA;AAIA,IAAA,IAAA,CAAK0B,WAAL,GAAmB,EAAE,GAAG,KAAKA,WAAV;MAAuB,GAAGE,YAAY,CAAC,MAAD,CAAA;KAAzD,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEEC,EAAAA,SAAS,GAAG;AACV,IAAA,OAAO,KAAKC,MAAZ,CAAA;AACD,GAAA;;AApCY;;eAATL;;iBAAAA;;;;kBAAAA;;;IAAAA;;;cAAAA;;;wJAAAA;;;eAAAA;;iBAAAA;;;;kBAAAA;;;IAAAA;;;cAAAA;;;;EAAAA;;wJAAAA;;;;;"}